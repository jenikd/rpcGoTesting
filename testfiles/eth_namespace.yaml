ignore: false

deploy:
  - contract_id: 1
    # Storage contract solidity 0.8.26 VM compiler set to cancun
    # // SPDX-License-Identifier: GPL-3.0 pragma solidity >=0.8.2 <0.9.0; /** * @title Storage * @dev Store & retrieve value in a variable * @custom:dev-run-script ./scripts/deploy_with_ethers.ts */ contract Storage { uint256 number; event TestLog(uint256 indexed num); /** * @dev Store value in variable * @param num value to store */ function store(uint256 num) public { number = num; emit TestLog(num); } /** * @dev Return value * @return value of 'number' */ function retrieve() public view returns (uint256) { return number; } }
    abi: '[{"inputs":[{"internalType":"uint256","name":"num","type":"uint256"}],"name":"store","outputs":[],"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"num","type":"uint256"}],"name":"TestLog","type":"event"},{"inputs":[],"name":"retrieve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]'
    bytecode: 0x6080604052348015600e575f80fd5b506101708061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80632e64cec1146100385780636057361d14610056575b5f80fd5b610040610072565b60405161004d91906100c8565b60405180910390f35b610070600480360381019061006b919061010f565b61007a565b005b5f8054905090565b805f81905550807fc9a2166775dcce465c3dc43d6ad4e991fef0c0cb017ad4533430a332a10276f960405160405180910390a250565b5f819050919050565b6100c2816100b0565b82525050565b5f6020820190506100db5f8301846100b9565b92915050565b5f80fd5b6100ee816100b0565b81146100f8575f80fd5b50565b5f81359050610109816100e5565b92915050565b5f60208284031215610124576101236100e1565b5b5f610131848285016100fb565b9150509291505056fea264697066735822122002b31252e768c65495f7f837173866f1d4b0311910bc9877241c2948875d16e864736f6c634300081a0033

contract_call:
  - call_id: 1
    contract_id: 1
    method_name: store
    arguments: [6]

test_call:
  - test_name: "eth_accounts"
    method_name: "eth_accounts"
    result: "ARRAY"

  - test_name: "eth_blobBaseFee"
    method_name: "eth_blobBaseFee"
    result: "NOT_AVAILABLE" # TODO not implemented

  - test_name: "eth_blockNumber"
    method_name: "eth_blockNumber"
    result: "HEX_NUMBER"

  - test_name: "eth_call"
    method_name: "eth_call"
    call_id: 1 # need deployed contract
    arguments: [{"to":"contract.address", "data":"0x2e64cec1"},"latest"]
    result: "0x0000000000000000000000000000000000000000000000000000000000000006"

  - test_name: "eth_chainId"
    method_name: "eth_chainId"
    result: "HEX_NUMBER"

  - test_name: "eth_estimateGas transfer"
    method_name: "eth_estimateGas"
    call_id: 1 # need signer from a call
    arguments: [{"from":"signer","to":"0x0747E45a742b2338c21406982F12d326b671921c", "value":"0x186a0"}]
    result: "HEX_NUMBER"

  - test_name: "eth_estimateGas contract call"
    method_name: "eth_estimateGas"
    call_id: 1 # need signer and deployed contract
    arguments: [{"from":"signer","to":"contract.address", "data":"0x6057361d0000000000000000000000000000000000000000000000000000000000000007"}]
    result: "HEX_NUMBER"

  - test_name: "eth_feeHistory"
    method_name: "eth_feeHistory"
    arguments: [1, "latest", [25,75]]
    result: {"baseFeePerGas":["0xf7cc115ce"],"gasUsedRatio":[0.99],"oldestBlock":"0x2bf","reward":[["0x3b79abd7","0x8ac53684"]]}
    ignore_fields: ["baseFeePerGas","gasUsedRatio","oldestBlock","reward"]

  - test_name: "eth_gasPrice"
    method_name: "eth_gasPrice"
    arguments: []
    result: "HEX_NUMBER"

  - test_name: "eth_getAccount"
    method_name: "eth_getAccount"
    call_id: 1 # need signer from a call
    arguments: ["signer", "latest"]
    result: "NOT_AVAILABLE" # TODO not implemented should return similar to {"codeHash":"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","storageRoot":"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421","balance":"0xba862b54effa","nonce":"0x23"}

  - test_name: "eth_getBalance"
    method_name: "eth_getBalance"
    call_id: 1 # need signer from a call
    arguments: ["signer", "latest"]
    result: "HEX_NUMBER"

  - test_name: "eth_getBlockByHash"
    method_name: "eth_getBlockByHash"
    call_id: 1 # need signer from a call
    arguments: ["tx.blockHash", false]
    result: {"baseFeePerGas":"0xa56c7bd3d","difficulty":"0x0","epoch":"0x16","extraData":"0x","gasLimit":"0xffffffffffff","gasUsed":"0xaf49","hash":"0x00000016000000044cfa0035ea36871260ca2916351b4a316778961b4f511593","logsBloom":"0xminer":"0x0000000000000000000000000000000000000000","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000001","nonce":"0x0000000000000000","number":"0x452","parentHash":"0x0000001600000001c924291b7bd5a0418eeb9229fb627f3b7ea1ca92715c57f2","receiptsRoot":"0x79b14afc0954551ff9ce28729cc66358762c206da8e9f646ed718d6b6750c7e2","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x2b6","stateRoot":"0x1b301b3f915993bd6e3eeb3d195c9ffb0f8724f1082cb569e8de470e67e77bf1","timestamp":"0x6717adcf","timestampNano":"0x1800caa613fe2ee7","totalDifficulty":"0x0","transactions":["0x1b15ce1fe316a2214f460d82e75248dbe436d04736d23514b52d0d234eb53f64"],"transactionsRoot":"0xad34fde2e5d17dcd4bc8090a5e32857f4c1e2d70030c02b5bce751b3b599d06d","uncles":[]}
    ignore_fields: ["baseFeePerGas","gas","gasUsed","epoch","hash","number","parentHash","receiptsRoot","size","stateRoot","timestamp","timestampNano","transactions","transactionsRoot","logsBloom"]

  - test_name: "eth_getBlockByNumber"
    method_name: "eth_getBlockByNumber"
    call_id: 1 # need signer from a call
    arguments: ["tx.blockNumber", false]
    result: {"baseFeePerGas":"0xa56c7bd3d","difficulty":"0x0","epoch":"0x16","extraData":"0x","gasLimit":"0xffffffffffff","gasUsed":"0xaf49","hash":"0x00000016000000044cfa0035ea36871260ca2916351b4a316778961b4f511593","logsBloom":"0xminer":"0x0000000000000000000000000000000000000000","mixHash":"0x0000000000000000000000000000000000000000000000000000000000000001","nonce":"0x0000000000000000","number":"0x452","parentHash":"0x0000001600000001c924291b7bd5a0418eeb9229fb627f3b7ea1ca92715c57f2","receiptsRoot":"0x79b14afc0954551ff9ce28729cc66358762c206da8e9f646ed718d6b6750c7e2","sha3Uncles":"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347","size":"0x2b6","stateRoot":"0x1b301b3f915993bd6e3eeb3d195c9ffb0f8724f1082cb569e8de470e67e77bf1","timestamp":"0x6717adcf","timestampNano":"0x1800caa613fe2ee7","totalDifficulty":"0x0","transactions":["0x1b15ce1fe316a2214f460d82e75248dbe436d04736d23514b52d0d234eb53f64"],"transactionsRoot":"0xad34fde2e5d17dcd4bc8090a5e32857f4c1e2d70030c02b5bce751b3b599d06d","uncles":[]}
    ignore_fields: ["baseFeePerGas","gas","gasUsed","epoch","hash","number","parentHash","receiptsRoot","size","stateRoot","timestamp","timestampNano","transactions","transactionsRoot","logsBloom"]

  - test_name: "eth_getBlockReceipts by block number"
    method_name: "eth_getBlockReceipts"
    call_id: 1 # need signer from a call
    arguments: ["tx.blockNumber"]
    result: [{"contractAddress":null,"cumulativeGasUsed":"0xaf49","from":"0x239fa7623354ec26520de878b52f13fe84b06971","gasUsed":"0xaf49","logs":[{"address":"0x27cd9110b95eae401935997e34811a5c6aa5e3a3","data":"0x","logIndex":"0x0","removed":false,"topics":["0xc9a2166775dcce465c3dc43d6ad4e991fef0c0cb017ad4533430a332a10276f9","0x0000000000000000000000000000000000000000000000000000000000000006"]}],"logsBloom":"0x00000008000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000080000000000000000000000000000200000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","status":"0x1","type":"0x0"}]
    ignore_fields: ["blockHash","blockNumber","effectiveGasPrice","cumulativeGasUsed","gasUsed","to","logs","logsBloom","transactionHash","transactionIndex","logsBloom"]

  - test_name: "eth_getBlockReceipts by block hash"
    method_name: "eth_getBlockReceipts"
    call_id: 1 # need signer from a call
    arguments: ["tx.blockHash"]
    result: "NOT_AVAILABLE" # TODO not implemented 
    #result: [{"contractAddress":null,"cumulativeGasUsed":"0xaf49","from":"0x239fa7623354ec26520de878b52f13fe84b06971","gasUsed":"0xaf49","logs":[{"address":"0x27cd9110b95eae401935997e34811a5c6aa5e3a3","data":"0x","logIndex":"0x0","removed":false,"topics":["0xc9a2166775dcce465c3dc43d6ad4e991fef0c0cb017ad4533430a332a10276f9","0x0000000000000000000000000000000000000000000000000000000000000006"]}],"logsBloom":"0xstatus":"0x1","type":"0x0"}]
    ignore_fields: ["blockHash","blockNumber","effectiveGasPrice","cumulativeGasUsed","gasUsed","to","logs","logsBloom","transactionHash","transactionIndex","logsBloom"]

  - test_name: "eth_getBlockTransactionCountByHash"
    method_name: "eth_getBlockTransactionCountByHash"
    call_id: 1 # need block hash from a call
    arguments: ["tx.blockHash"]
    result: "HEX_NUMBER"

  - test_name: "eth_getBlockTransactionCountByNumber"
    method_name: "eth_getBlockTransactionCountByNumber"
    call_id: 1 # need block hash from a call
    arguments: ["tx.blockNumber"]
    result: "HEX_NUMBER"

  - test_name: "eth_getCode"
    method_name: "eth_getCode"
    call_id: 1 # need contract address from a call
    arguments: ["contract.address", "latest"]
    result: "HEX_BYTES"

  - test_name: "eth_newFilter"
    method_name: "eth_newFilter"
    call_id: 1 # need contract address from a call
    arguments: [{"fromBlock": "tx.blockNumber", "toBlock": "latest", "address": "contract.address","topics": []}]
    result: "HEX_BYTES"